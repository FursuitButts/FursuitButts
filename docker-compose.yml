version: "3"

services:
  fursuitbutts:
    build: ./
    container_name: fursuitbutts
    volumes:
      - .:/app
      - node_modules:/app/node_modules
      - public_packs:/app/public/packs
      - public_packs_test:/app/public/packs-test
      - ./data/posts:/app/public/data
    environment:
      DATABASE_URL: postgresql://danbooru:@postgres
      RAILS_ENV: ${FURSUITBUTTS_ENV:-development}
      DANBOORU_HOSTNAME: ${FURSUITBUTTS_HOST}
      DANBOORU_REDIS_URL: redis://redis
      DANBOORU_ELASTICSEARCH_HOST: elastic
      DANBOORU_MEMCACHED_SERVERS: memcached
      DANBOORU_IQDBS_SERVER: http://iqdb:4567
      SECRET_TOKEN: ${FURSUITBUTTS_STOKEN}
      SESSION_SECRET_KEY: ${FURSUITBUTTS_SKEY}
      TZ: America/Chicago
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      memcached:
        condition: service_healthy
      elastic:
        condition: service_healthy
      iqdb:
        condition: service_healthy
    restart: always
    healthcheck:
      interval: 10s
      timeout: 2s
      test: lsof -i :9000 || exit 1
    hostname: fursuitbutts.fursuitbutts.containers.local
    networks:
      default:
        ipv4_address: 172.22.1.2
    tty: true

  nginx:
    image: nginx:stable-alpine
    container_name: fursuitbutts.nginx
    volumes:
      - ./public:/app/public
      - ./data/posts:/app/public/data
      - ./ssl:/app/ssl
      - public_packs:/app/public/packs
      - public_packs_test:/app/public/packs-test
      - ./docker/default.conf.template:/etc/nginx/templates/default.conf.template
    healthcheck:
      interval: 10s
      timeout: 5s
      test: lsof -i :443 || exit 1
    environment:
      - NGINX_HOST=nginx.fursuitbutts.containers.local
      - NGINX_PORT=443
      - TZ=America/Chicago
    depends_on:
      - fursuitbutts
    hostname: nginx.fursuitbutts.containers.local
    networks:
      default:
        ipv4_address: 172.21.2.3

  postgres:
    build: ./docker/postgres
    container_name: fursuitbutts.postgres
    environment:
      - POSTGRES_USER=danbooru
      - POSTGRES_HOST_AUTH_METHOD=trust
      - TZ=America/Chicago
    volumes:
      - ./data/db:/var/lib/postgresql/data
    healthcheck:
      test: PGUSER=danbooru pg_isready
      interval: 10s
      timeout: 5s
    hostname: postgres.fursuitbutts.containers.local
    networks:
      default:
        ipv4_address: 172.21.2.4

  redis:
    image: redis:alpine
    container_name: fursuitbutts.redis
    command: redis-server --save 10 1 --loglevel warning
    environment:
      - TZ=America/Chicago
    volumes:
      - redis_data:/data
    healthcheck:
      test: redis-cli ping
      interval: 10s
      timeout: 5s
    hostname: redis.fursuitbutts.containers.local
    networks:
      default:
        ipv4_address: 172.21.2.5

  memcached:
    image: memcached:alpine
    container_name: fursuitbutts.memcached
    environment:
      TZ: America/Chicago
    healthcheck:
      interval: 10s
      timeout: 2s
      test: nc -z 127.0.0.1 11211
    hostname: memcached.fursuitbutts.containers.local
    networks:
      default:
        ipv4_address: 172.21.2.6

  elastic:
    image: elasticsearch:7.14.2
    container_name: fursuitbutts.elastic
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - logger.level=WARN
      - ES_JAVA_OPTS=-Xms1g -Xmx1g
      - TZ=America/Chicago
    volumes:
      - elastic_data:/usr/share/elasticsearch/data
    mem_limit: 2gb
    healthcheck:
      interval: 10s
      timeout: 2s
      test: curl --write-out 'HTTP %{http_code}' --fail --silent --output /dev/null
        http://localhost:9200/ || exit 1
    hostname: elastic.fursuitbutts.containers.local
    networks:
      default:
        ipv4_address: 172.21.2.7

  iqdb:
    build: ./docker/iqdb
    container_name: fursuitbutts.iqdb
    environment:
      - IQDB_HOSTNAME=localhost
      - IQDB_PORT=62125
      # Hardcoded in iqdbs Procfile
      - IQDB_DATABASE_FILE=/home/vagrant/iqdbs/e621.db
      - SINATRA_PORT=4567
      - IMAGES_FOLDER=/data
      - REDIS_URL=redis://redis
      # Sinatra only binds to localhost in development, but to 0.0.0.0 for anything else
      - APP_ENV=docker
      - TZ=America/Chicago
    depends_on:
      - redis
    volumes:
      - ./data/posts:/app/public/data
      - ./data/iqdb:/home/vagrant/iqdbs
    healthcheck:
      interval: 10s
      timeout: 2s
      test: nc -z 127.0.0.1 62125
    hostname: iqdb.fursuitbutts.containers.local
    networks:
      default:
        ipv4_address: 172.21.2.8

networks:
  default:
    name: fursuitbutts
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.21.2.0/24
          gateway: 172.21.2.1

volumes:
  redis_data:
    name: fursuitbutts_redis
  elastic_data:
    name: fursuitbutts_elastic
  node_modules:
    name: fursuitbutts_node_modules
  public_packs:
    name: fursuitbutts_packs
  public_packs_test:
    name: fursuitbutts_packs_test
